{"ast":null,"code":"import Vue from 'vue';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nimport searchGlobal from './searchGlobal.vue';\nimport { getInfo, postInfo, editInfo, deleteInfo } from '../components/serives/api';\nvar test;\nVue.use(VueAxios, axios);\nexport default {\n  name: 'api-integration',\n\n  data() {\n    return {\n      data: {\n        empid: '',\n        name: '',\n        dept: ''\n      },\n      numberRules: [v => !!v || 'input is required', v => !isNaN(parseFloat(v)) && v >= 0 && v <= 99999 || 'input must be number && max 5 numbers'],\n      nameRules: [v => !!v || 'input is required', v => v && v.length <= 20 || 'input must be less than 15 characters', v => /^[a-zA-z]+$/.test(v) || 'input is not valid'],\n      list: [],\n      dialog: false,\n      arr: [],\n      flag: true,\n      message: ''\n    };\n  },\n\n  mounted() {\n    getInfo().then(resp => {\n      this.list = resp.data;\n    });\n  },\n\n  methods: {\n    sendData() {\n      console.log('post');\n      postInfo(this.data);\n      this.dialog = false;\n      this.getInfo();\n      this.$refs.form.reset();\n    },\n\n    deleting(id) {\n      deleteInfo(id).then(resp => {\n        this.list = resp.data;\n      });\n    },\n\n    editItem(item) {\n      this.flag = false;\n      this.dialog = true;\n      test = item;\n      this.data = item;\n    },\n\n    async edit() {\n      this.flag = true;\n      this.dialog = false;\n      test.empid = this.data.empid;\n      test.name = this.data.name;\n      test.dept = this.data.dept;\n      this.$refs.form.reset();\n      editInfo(this.data).then(response => {\n        console.log(response);\n      });\n      console.log(test.name);\n      this.sendData();\n    },\n\n    change(message) {\n      this.message = message;\n    },\n\n    funSearch(val) {\n      this.list = val.data;\n    }\n\n  },\n  components: {\n    searchGlobal\n  }\n};","map":{"version":3,"mappings":"AAmGA;AACA;AACA;AACA;AACA;AACA;AACAA;AACA;EACAC,uBADA;;EAEAC;IACA;MACAA;QACAC,SADA;QAEAF,QAFA;QAGAG;MAHA,CADA;MAQAC,cACAC,+BADA,EAEAA,6FAFA,CARA;MAaAC,YACAD,+BADA,EAEAA,mEAFA,EAGAA,kDAHA,CAbA;MAmBAE,QAnBA;MAoBAC,aApBA;MAqBAC,OArBA;MAsBAC,UAtBA;MAuBAC;IAvBA;EA0BA,CA7BA;;EA8BAC;IACAC,UACAC,IADA,CACAC;MACA;IACA,CAHA;EAIA,CAnCA;;EAoCAC;IACAC;MACAC;MACAC;MACA;MACA;MACA;IAEA,CARA;;IASAC;MACAC,eACAP,IADA,CACAC;QACA;MACA,CAHA;IAKA,CAfA;;IAgBAO;MACA;MACA;MACAC;MACA;IAGA,CAvBA;;IAwBA;MACA;MACA;MACAA;MACAA;MACAA;MACA;MACAC,oBACAV,IADA,CACAW;QACAP;MACA,CAHA;MAIAA;MACA;IAEA,CAtCA;;IAwCAQ,gBACA;MACA;IACA,CA3CA;;IA4CAC;MACA;IACA;;EA9CA,CApCA;EAuFAC;IAAAC;EAAA;AAvFA","names":["Vue","name","data","empid","dept","numberRules","v","nameRules","list","dialog","arr","flag","message","mounted","getInfo","then","resp","methods","sendData","console","postInfo","deleting","deleteInfo","editItem","test","editInfo","response","change","funSearch","components","searchGlobal"],"sourceRoot":"src/components","sources":["deptTable.vue"],"sourcesContent":["<template>\n  <v-app>\n    <searchGlobal @funSearchSender=\"funSearch($event)\"/>\n    <v-form methos=\"post\" ref=\"form\" lazy-validation>\n      <v-dialog v-model=\"dialog\">\n        <template v-slot:activator=\"{on}\">\n          <v-flex text-right align-right>\n            <v-btn class=\"blue\" v-on=\"on\">\n              <v-icon dark>\n                mdi-plus\n              </v-icon>\n            </v-btn>\n          </v-flex>\n        </template>\n        <v-card>\n        <v-card-text class=\"white\">\n          <v-container>\n            <v-row>\n              <v-col md=\"4\">\n                <v-text-field v-model=\"data.empid\"  label=\"empid\" value=\"empid\" required :rules=\"numberRules\" v-comma=\"data.empid\"></v-text-field>\n              </v-col>\n              <v-col  md=\"4\">\n                <v-text-field v-model=\"data.name\" label=\"name\" required :rules=\"nameRules\"></v-text-field>\n              </v-col>\n              <v-col  md=\"4\">\n                <v-text-field v-model=\"data.dept\"  label=\"dept\" required :rules=\"nameRules\"></v-text-field>\n              </v-col>\n              <v-btn elevation=\"2\" class=\"blue\" @click=\"sendData\" v-if=\"flag\">submit</v-btn>\n              <v-btn elevation=\"2\" class=\"blue\" @click=\"edit\" v-else>edit</v-btn>\n            </v-row>\n          </v-container>\n\n        </v-card-text>\n      </v-card>\n      </v-dialog>\n    </v-form>\n\n    <v-simple-table>\n      <template v-slot:default>\n        <thead>\n          <tr>\n            <th>\n              id\n            </th>\n            <th>\n              empid\n            </th>\n            <th>\n              name\n            </th>\n            <th>\n              dept\n            </th>\n            <th>\n              edit\n            </th>\n            <th>\n              delete\n            </th>\n\n\n          </tr>\n        </thead>\n        <tbody class=\"text-left\">\n          <tr v-for=\"item in list\" v-bind:key=\"item.id\">\n            <td>{{item.id}}</td>\n            <td>{{item.empid}}</td>\n            <td>{{item.name|dot-dot}}</td>\n            <td>{{item.dept}}</td>\n            <td>\n              <v-btn class=\"mx-1\" fab dark small color=\"cyan\" @click=\"editItem(item)\" >\n                <v-icon dark>\n                  mdi-pencil\n                </v-icon>\n              </v-btn>\n\n            </td>\n            <td>\n              <v-btn class=\"mx-1\" fab dark small color=\"cyan\" @click=\"deleting(item.id)\" >\n                <v-icon dark>\n                  mdi-delete\n                </v-icon>\n              </v-btn>\n\n            </td>\n\n\n          </tr>\n        </tbody>\n      </template>\n\n    </v-simple-table>\n    <h1>{{this.search}}</h1>\n\n  </v-app>\n</template>\n\n\n<script>\nimport Vue from 'vue';\nimport axios from 'axios'\nimport VueAxios from 'vue-axios'\nimport searchGlobal from './searchGlobal.vue';\nimport { getInfo, postInfo, editInfo, deleteInfo} from '../components/serives/api'\nvar test;\nVue.use(VueAxios, axios)\nexport default {\n  name: 'api-integration',\n  data() {\n    return {\n      data:{\n        empid: '',\n        name: '',\n        dept: '',\n\n      },\n     \n      numberRules:[\n      v => !!v || 'input is required',\n      v => (!isNaN(parseFloat(v)) && v >= 0 && v <=99999)||'input must be number && max 5 numbers',\n      ],\n     \n      nameRules: [\n        v => !!v || 'input is required',\n        v => (v && v.length <= 20) || 'input must be less than 15 characters',\n        v=>/^[a-zA-z]+$/.test(v)||'input is not valid'\n      ],\n     \n      list: [],\n      dialog: false,\n      arr: [],\n      flag:true,\n      message:''\n      \n    }\n  },\n  mounted() {\ngetInfo()\n.then((resp) => {\n        this.list = resp.data;\n      })\n  },\n  methods: {\n     sendData() {\n      console.log('post')\n     postInfo(this.data)\n      this.dialog = false\n     this.getInfo()\n        this.$refs.form.reset()\n\n    },\n   deleting(id) {\n    deleteInfo(id)\n.then((resp) => {\n          this.list = resp.data;\n        })\n\n    },\n    editItem(item) {\n      this.flag=false\n      this.dialog = true\n      test = item\n     this.data=item\n\n\n    },\n    async edit() {\n      this.flag=true\n      this.dialog=false\n      test.empid = this.data.empid\n      test.name = this.data.name\n      test.dept = this.data.dept\n      this.$refs.form.reset()\n   editInfo(this.data)\n        .then(response => {\n          console.log(response);\n        });\n      console.log(test.name)\n      this.sendData()\n      \n    },\n   \n    change(message)\n    {\n      this.message=message\n    },\n    funSearch(val){\n      this.list = val.data\n    }\n\n    \n  },\n\n  components:{searchGlobal}\n\n\n}\n</script>"]},"metadata":{},"sourceType":"module"}