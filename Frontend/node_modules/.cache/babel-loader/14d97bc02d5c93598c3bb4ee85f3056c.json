{"ast":null,"code":"import \"../../../src/components/VDataIterator/VDataFooter.sass\"; // Components\n\nimport VSelect from '../VSelect/VSelect';\nimport VIcon from '../VIcon';\nimport VBtn from '../VBtn'; // Types\n\nimport Vue from 'vue';\nimport { getSlot } from '../../util/helpers';\nexport default Vue.extend({\n  name: 'v-data-footer',\n  props: {\n    options: {\n      type: Object,\n      required: true\n    },\n    pagination: {\n      type: Object,\n      required: true\n    },\n    itemsPerPageOptions: {\n      type: Array,\n      default: () => [5, 10, 15, -1]\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev'\n    },\n    nextIcon: {\n      type: String,\n      default: '$next'\n    },\n    firstIcon: {\n      type: String,\n      default: '$first'\n    },\n    lastIcon: {\n      type: String,\n      default: '$last'\n    },\n    itemsPerPageText: {\n      type: String,\n      default: '$vuetify.dataFooter.itemsPerPageText'\n    },\n    itemsPerPageAllText: {\n      type: String,\n      default: '$vuetify.dataFooter.itemsPerPageAll'\n    },\n    showFirstLastPage: Boolean,\n    showCurrentPage: Boolean,\n    disablePagination: Boolean,\n    disableItemsPerPage: Boolean,\n    pageText: {\n      type: String,\n      default: '$vuetify.dataFooter.pageText'\n    }\n  },\n  computed: {\n    disableNextPageIcon() {\n      return this.options.itemsPerPage <= 0 || this.options.page * this.options.itemsPerPage >= this.pagination.itemsLength || this.pagination.pageStop < 0;\n    },\n\n    computedDataItemsPerPageOptions() {\n      return this.itemsPerPageOptions.map(option => {\n        if (typeof option === 'object') return option;else return this.genDataItemsPerPageOption(option);\n      });\n    }\n\n  },\n  methods: {\n    updateOptions(obj) {\n      this.$emit('update:options', Object.assign({}, this.options, obj));\n    },\n\n    onFirstPage() {\n      this.updateOptions({\n        page: 1\n      });\n    },\n\n    onPreviousPage() {\n      this.updateOptions({\n        page: this.options.page - 1\n      });\n    },\n\n    onNextPage() {\n      this.updateOptions({\n        page: this.options.page + 1\n      });\n    },\n\n    onLastPage() {\n      this.updateOptions({\n        page: this.pagination.pageCount\n      });\n    },\n\n    onChangeItemsPerPage(itemsPerPage) {\n      this.updateOptions({\n        itemsPerPage,\n        page: 1\n      });\n    },\n\n    genDataItemsPerPageOption(option) {\n      return {\n        text: option === -1 ? this.$vuetify.lang.t(this.itemsPerPageAllText) : String(option),\n        value: option\n      };\n    },\n\n    genItemsPerPageSelect() {\n      let value = this.options.itemsPerPage;\n      const computedIPPO = this.computedDataItemsPerPageOptions;\n      if (computedIPPO.length <= 1) return null;\n      if (!computedIPPO.find(ippo => ippo.value === value)) value = computedIPPO[0];\n      return this.$createElement('div', {\n        staticClass: 'v-data-footer__select'\n      }, [this.$vuetify.lang.t(this.itemsPerPageText), this.$createElement(VSelect, {\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.itemsPerPageText)\n        },\n        props: {\n          disabled: this.disableItemsPerPage,\n          items: computedIPPO,\n          value,\n          hideDetails: true,\n          auto: true,\n          minWidth: '75px'\n        },\n        on: {\n          input: this.onChangeItemsPerPage\n        }\n      })]);\n    },\n\n    genPaginationInfo() {\n      let children = ['â€“'];\n      const itemsLength = this.pagination.itemsLength;\n      let pageStart = this.pagination.pageStart;\n      let pageStop = this.pagination.pageStop;\n\n      if (this.pagination.itemsLength && this.pagination.itemsPerPage) {\n        pageStart = this.pagination.pageStart + 1;\n        pageStop = itemsLength < this.pagination.pageStop || this.pagination.pageStop < 0 ? itemsLength : this.pagination.pageStop;\n        children = this.$scopedSlots['page-text'] ? [this.$scopedSlots['page-text']({\n          pageStart,\n          pageStop,\n          itemsLength\n        })] : [this.$vuetify.lang.t(this.pageText, pageStart, pageStop, itemsLength)];\n      } else if (this.$scopedSlots['page-text']) {\n        children = [this.$scopedSlots['page-text']({\n          pageStart,\n          pageStop,\n          itemsLength\n        })];\n      }\n\n      return this.$createElement('div', {\n        class: 'v-data-footer__pagination'\n      }, children);\n    },\n\n    genIcon(click, disabled, label, icon) {\n      return this.$createElement(VBtn, {\n        props: {\n          disabled: disabled || this.disablePagination,\n          icon: true,\n          text: true // dark: this.dark, // TODO: add mixin\n          // light: this.light // TODO: add mixin\n\n        },\n        on: {\n          click\n        },\n        attrs: {\n          'aria-label': label // TODO: Localization\n\n        }\n      }, [this.$createElement(VIcon, icon)]);\n    },\n\n    genIcons() {\n      const before = [];\n      const after = [];\n      before.push(this.genIcon(this.onPreviousPage, this.options.page === 1, this.$vuetify.lang.t('$vuetify.dataFooter.prevPage'), this.$vuetify.rtl ? this.nextIcon : this.prevIcon));\n      after.push(this.genIcon(this.onNextPage, this.disableNextPageIcon, this.$vuetify.lang.t('$vuetify.dataFooter.nextPage'), this.$vuetify.rtl ? this.prevIcon : this.nextIcon));\n\n      if (this.showFirstLastPage) {\n        before.unshift(this.genIcon(this.onFirstPage, this.options.page === 1, this.$vuetify.lang.t('$vuetify.dataFooter.firstPage'), this.$vuetify.rtl ? this.lastIcon : this.firstIcon));\n        after.push(this.genIcon(this.onLastPage, this.options.page >= this.pagination.pageCount || this.options.itemsPerPage === -1, this.$vuetify.lang.t('$vuetify.dataFooter.lastPage'), this.$vuetify.rtl ? this.firstIcon : this.lastIcon));\n      }\n\n      return [this.$createElement('div', {\n        staticClass: 'v-data-footer__icons-before'\n      }, before), this.showCurrentPage && this.$createElement('span', [this.options.page.toString()]), this.$createElement('div', {\n        staticClass: 'v-data-footer__icons-after'\n      }, after)];\n    }\n\n  },\n\n  render() {\n    return this.$createElement('div', {\n      staticClass: 'v-data-footer'\n    }, [getSlot(this, 'prepend'), this.genItemsPerPageSelect(), this.genPaginationInfo(), this.genIcons()]);\n  }\n\n});","map":null,"metadata":{},"sourceType":"module"}