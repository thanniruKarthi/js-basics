{"ast":null,"code":"import Vue from 'vue';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nimport searchGlobal from './searchGlobal.vue';\nimport { getInfo } from './serives/api';\nvar test;\nVue.use(VueAxios, axios);\nexport default {\n  name: 'api-integration',\n\n  data() {\n    return {\n      form: {\n        empid: '',\n        name: '',\n        dept: ''\n      },\n      numberRules: [v => !!v || 'input is required', v => !isNaN(parseFloat(v)) && v >= 0 && v <= 99999 || 'input must be number && max 5 numbers'],\n      nameRules: [v => !!v || 'input is required', v => v && v.length <= 20 || 'input must be less than 15 characters', v => /^[a-zA-z]+$/.test(v) || 'input is not valid'],\n      list: [],\n      dialog: false,\n      arr: [],\n      flag: true,\n      message: ''\n    };\n  },\n\n  mounted() {\n    getInfo().then(resp => {\n      this.list = resp.data;\n    });\n  },\n\n  methods: {\n    async sendData() {\n      await Vue.axios.post(`http://127.0.0.1:40193/createdept`, {\n        empid: this.form.empid,\n        name: this.form.name,\n        dept: this.form.dept\n      });\n      this.dialog = false;\n      Vue.axios.get('http://127.0.0.1:40193/readdept').then(resp => {\n        this.list = resp.data;\n      });\n      this.$refs.form.reset();\n    },\n\n    async deleting(id) {\n      await Vue.axios.delete(`http://127.0.0.1:40193/deletedept/${id}`);\n      Vue.axios.get('http://127.0.0.1:40193/readdept').then(resp => {\n        this.list = resp.data;\n      });\n    },\n\n    editItem(item) {\n      this.flag = false;\n      this.dialog = true;\n      test = item;\n      this.form.empid = item.empid;\n      this.form.name = item.name;\n      this.form.dept = item.dept;\n    },\n\n    async edit() {\n      this.flag = true;\n      this.dialog = false;\n      test.empid = this.form.empid;\n      test.name = this.form.name;\n      test.dept = this.form.dept;\n      this.$refs.form.reset();\n      await axios.put(`http://127.0.0.1:40193/updatedept/${test.id}`, {\n        empid: test.empid,\n        name: test.name,\n        dept: test.dept\n      }).then(response => {\n        console.log(response);\n      });\n      console.log(test.name);\n      this.sendData();\n    },\n\n    change(message) {\n      this.message = message;\n    },\n\n    funSearch(val) {\n      this.list = val.data;\n    }\n\n  },\n  components: {\n    searchGlobal\n  }\n};","map":null,"metadata":{},"sourceType":"module"}