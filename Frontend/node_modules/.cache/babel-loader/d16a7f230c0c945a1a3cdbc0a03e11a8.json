{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EmployeeComponent',\n  data: () => ({\n    dialog: false,\n    dialogDelete: false,\n    columnNames: [{\n      text: 'S.No',\n      align: 'start',\n      sortable: false,\n      value: 'id'\n    }, {\n      text: 'Name Of the Employee',\n      value: 'name'\n    }, {\n      text: 'Email',\n      value: 'email'\n    }, {\n      text: 'Actions',\n      value: 'actions',\n      sortable: false\n    }],\n    employeeTableData: [],\n    editedIndex: -1,\n    editedItem: {\n      id: '',\n      name: '',\n      email: ''\n    },\n    defaultItem: {\n      id: '',\n      name: '',\n      email: ''\n    }\n  }),\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? 'Enter Employee Data' : 'Edit Employee Data';\n    }\n\n  },\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n\n    dialogDelete(val) {\n      val || this.closeDelete();\n    }\n\n  },\n\n  created() {\n    this.initialize();\n  },\n\n  methods: {\n    initialize() {\n      axios.get(`http://127.0.0.1:3333/displayEmpTable`).then(response => {\n        // JSON responses are\n        // automatically parsed\n        this.employeeTableData = response.data;\n      });\n      console.log(this.employeeTableData);\n    },\n\n    editItem(item) {\n      this.editedIndex = this.employeeTableData.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n\n    deleteItem(item) {\n      this.editedIndex = this.employeeTableData.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n\n    deleteItemConfirm() {\n      this.employeeTableData.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.employeeTableData[this.editedIndex], this.editedItem);\n      } else {\n        this.employeeTableData.push(this.editedItem);\n      }\n\n      this.close();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4EA;AACA;EACAA,yBADA;EAEAC;IACAC,aADA;IAEAC,mBAFA;IAGAC,cACA;MACAC,YADA;MAEAC,cAFA;MAGAC,eAHA;MAIAC;IAJA,CADA,EAOA;MAAAH;MAAAG;IAAA,CAPA,EAQA;MAAAH;MAAAG;IAAA,CARA,EASA;MAAAH;MAAAG;MAAAD;IAAA,CATA,CAHA;IAcAE,qBAdA;IAeAC,eAfA;IAgBAC;MACAC,MADA;MAEAZ,QAFA;MAGAa;IAHA,CAhBA;IAqBAC;MACAF,MADA;MAEAZ,QAFA;MAGAa;IAHA;EArBA,EAFA;EA6BAE;IACAC;MACA;IACA;;EAHA,CA7BA;EAkCAC;IACAf;MACAgB;IACA,CAHA;;IAIAf;MACAe;IACA;;EANA,CAlCA;;EA0CAC;IACA;EACA,CA5CA;;EA6CAC;IACAC;MACAC;QACA;QACA;QACA;MACA,CAJA;MAKAC;IACA,CARA;;IASAC;MACA;MACA;MACA;IACA,CAbA;;IAcAC;MACA;MACA;MACA;IACA,CAlBA;;IAmBAC;MACA;MACA;IACA,CAtBA;;IAuBAC;MACA;MACA;QACA;QACA;MACA,CAHA;IAIA,CA7BA;;IA8BAC;MACA;MACA;QACA;QACA;MACA,CAHA;IAIA,CApCA;;IAqCAC;MACA;QACAC;MACA,CAFA,MAEA;QACA;MACA;;MACA;IACA;;EA5CA;AA7CA","names":["name","data","dialog","dialogDelete","columnNames","text","align","sortable","value","employeeTableData","editedIndex","editedItem","id","email","defaultItem","computed","formTitle","watch","val","created","methods","initialize","axios","console","editItem","deleteItem","deleteItemConfirm","close","closeDelete","save","Object"],"sourceRoot":"src/components","sources":["ageTable.vue"],"sourcesContent":["<template>\n  <v-data-table :headers=\"columnNames\" :items=\"employeeTableData\" sort-by=\"calories\" class=\"elevation-1\">\n      <template v-slot:top>\n          <v-toolbar flat>\n              <v-toolbar-title>Employee Table</v-toolbar-title>\n              <v-divider class=\"mx-4\" inset vertical></v-divider>\n              <v-spacer></v-spacer>\n              <v-dialog v-model=\"dialog\" max-width=\"500px\">\n                  <template v-slot:activator=\"{ on, attrs }\">\n                      <v-btn fab color=\"indigo\" dark class=\"mx-2\" v-bind=\"attrs\" v-on=\"on\">\n                          <v-icon dark>mdi-plus</v-icon>\n                      </v-btn>\n                  </template>\n                  <v-card>\n                      <v-card-title>\n                          <span class=\"text-h5\">{{ formTitle }}</span>\n                      </v-card-title>\n                      <v-card-text>\n                          <v-container>\n                              <v-row>\n                                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                                      <v-text-field v-model=\"employeeTableData.id\" label=\"Id\"></v-text-field>\n                                  </v-col>\n                                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                                      <v-text-field v-model=\"employeeTableData.name\" label=\"Name\"></v-text-field>\n                                  </v-col>\n                                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                                      <v-text-field v-model=\"employeeTableData.email\" label=\"Email\"></v-text-field>\n                                  </v-col>\n                              </v-row>\n                          </v-container>\n                      </v-card-text>\n                      <v-card-actions>\n                          <v-spacer></v-spacer>\n                          <v-btn color=\"blue darken-1\" text @click=\"close\">\n                              Cancel\n                          </v-btn>\n                          <v-btn color=\"blue darken-1\" text @click=\"save\">\n                              Save\n                          </v-btn>\n                      </v-card-actions>\n                  </v-card>\n              </v-dialog>\n              <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n                  <v-card>\n                      <v-card-title class=\"text-h5\">Are you sure you want to delete this employee?</v-card-title>\n                      <v-card-actions>\n                          <v-spacer></v-spacer>\n                          <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">Cancel</v-btn>\n                          <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\">OK</v-btn>\n                          <v-spacer></v-spacer>\n                      </v-card-actions>\n                  </v-card>\n              </v-dialog>\n          </v-toolbar>\n      </template>\n      <template v-slot:[`item.actions`]=\"{ item }\">\n          <v-btn fab small color=\"red\">\n          <v-icon small class=\"mr-2\" @click=\"editItem(item)\">\n              mdi-pencil\n          </v-icon>\n      </v-btn>\n      <v-btn fab small color=\"blue\">\n          <v-icon small @click=\"deleteItem(item)\">\n              mdi-delete\n          </v-icon>\n      </v-btn>\n      </template>\n      <template v-slot:no-data>\n          <v-btn color=\"primary\" @click=\"initialize\">\n              Reset\n          </v-btn>\n      </template>\n  </v-data-table>\n</template>\n<script>\nimport axios from 'axios'\nexport default {\n  name: 'EmployeeComponent',\n  data: () => ({\n      dialog: false,\n      dialogDelete: false,\n      columnNames: [\n          {\n              text: 'S.No',\n              align: 'start',\n              sortable: false,\n              value: 'id',\n          },\n          { text: 'Name Of the Employee', value: 'name' },\n          { text: 'Email', value: 'email' },\n          { text: 'Actions', value: 'actions', sortable: false },\n      ],\n      employeeTableData: [],\n      editedIndex: -1,\n      editedItem: {\n          id: '',\n          name: '',\n          email: ''\n      },\n      defaultItem: {\n          id: '',\n          name: '',\n          email: ''\n      },\n  }),\n  computed: {\n      formTitle() {\n          return this.editedIndex === -1 ? 'Enter Employee Data' : 'Edit Employee Data'\n      },\n  },\n  watch: {\n      dialog(val) {\n          val || this.close()\n      },\n      dialogDelete(val) {\n          val || this.closeDelete()\n      },\n  },\n  created() {\n      this.initialize()\n  },\n  methods: {\n      initialize() {\n          axios.get(`http://127.0.0.1:3333/displayEmpTable`).then(response => {\n              // JSON responses are\n              // automatically parsed\n              this.employeeTableData = response.data;\n          });\n          console.log(this.employeeTableData);\n      },\n      editItem(item) {\n          this.editedIndex = this.employeeTableData.indexOf(item)\n          this.editedItem = Object.assign({}, item)\n          this.dialog = true\n      },\n      deleteItem(item) {\n          this.editedIndex = this.employeeTableData.indexOf(item)\n          this.editedItem = Object.assign({}, item)\n          this.dialogDelete = true\n      },\n      deleteItemConfirm() {\n          this.employeeTableData.splice(this.editedIndex, 1)\n          this.closeDelete()\n      },\n      close() {\n          this.dialog = false\n          this.$nextTick(() => {\n              this.editedItem = Object.assign({}, this.defaultItem)\n              this.editedIndex = -1\n          })\n      },\n      closeDelete() {\n          this.dialogDelete = false\n          this.$nextTick(() => {\n              this.editedItem = Object.assign({}, this.defaultItem)\n              this.editedIndex = -1\n          })\n      },\n      save() {\n          if (this.editedIndex > -1) {\n              Object.assign(this.employeeTableData[this.editedIndex], this.editedItem)\n          } else {\n              this.employeeTableData.push(this.editedItem)\n          }\n          this.close()\n      },\n  },\n}\n</script>\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}